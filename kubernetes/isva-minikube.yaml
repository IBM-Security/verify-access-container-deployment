#Assumes create-secrets.sh used to create key file, isvaadmin, and cfgsvc secrets

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ldaplib
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50M
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ldapslapd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50M
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ldapsecauthority
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50M
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresqldata
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50M
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: isvaconfig
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50M
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openldap
  labels:
    app: openldap
spec:
  selector:
    matchLabels:
      app: openldap
  replicas: 1
  template:
    metadata:
      labels:
        app: openldap
    spec:
      volumes:
        - name: ldaplib
          persistentVolumeClaim:
            claimName: ldaplib
        - name: ldapslapd
          persistentVolumeClaim:
            claimName: ldapslapd
        - name: ldapsecauthority
          persistentVolumeClaim:
            claimName: ldapsecauthority
        - name: openldap-keys
          secret:
            secretName: openldap-keys
      containers:
        - name: openldap
          image: ibmcom/verify-access-openldap:10.0.2.0
          ports:
            - containerPort: 636
          env:
            - name: LDAP_DOMAIN
              value: ibm.com
            - name: LDAP_ADMIN_PASSWORD
              value: Passw0rd
            - name: LDAP_CONFIG_PASSWORD
              value: Passw0rd
          volumeMounts:
            - mountPath: /var/lib/ldap
              name: ldaplib
            - mountPath: /etc/ldap/slapd.d
              name: ldapslapd
            - mountPath: /var/lib/ldap.secAuthority
              name: ldapsecauthority
            - mountPath: /container/service/slapd/assets/certs
              name: openldap-keys
# This line is needed when running on Kubernetes 1.9.4 or above
          args: [ "--copy-service"]
# useful for debugging startup issues - can run bash, then exec to the container and poke around
#          command: [ "/bin/bash"]
#          args: [ "-c", "while /bin/true ; do sleep 5; done" ]
# Just this line to get debug output from openldap startup
#          args: [ "--loglevel" , "trace","--copy-service"]
---
# for external service access, see https://console.bluemix.net/docs/containers/cs_apps.html#cs_apps_public_nodeport
apiVersion: v1
kind: Service
metadata:
  name: openldap
  labels:
    app: openldap
spec:
  ports:
    - port: 636
      name: ldaps
      protocol: TCP
  selector:
    app: openldap
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  labels:
    app: postgresql
spec:
  selector:
    matchLabels:
      app: postgresql
  replicas: 1
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 70
        fsGroup: 0
      volumes:
        - name: postgresqldata
          persistentVolumeClaim:
            claimName: postgresqldata
        - name: postgresql-keys
          secret:
            secretName: postgresql-keys
      containers:
        - name: postgresql
          image: ibmcom/verify-access-postgresql:10.0.2.0
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: Passw0rd
            - name: POSTGRES_DB
              value: isva
            - name: POSTGRES_SSL_KEYDB
              value: /var/local/server.pem
            - name: PGDATA
              value: /var/lib/postgresql/data/db-files/
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresqldata
            - mountPath: /var/local
              name: postgresql-keys
# useful for debugging startup issues - can run bash, then exec to the container and poke around
#          command: [ "/bin/bash"]
#          args: [ "-c", "while /bin/true ; do sleep 5; done" ]
---
# for external service access, see https://console.bluemix.net/docs/containers/cs_apps.html#cs_apps_public_nodeport
apiVersion: v1
kind: Service
metadata:
  name: postgresql
spec:
  ports:
    - port: 5432
      name: postgresql
      protocol: TCP
  selector:
    app: postgresql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: isvaconfig
  labels:
    app: isvaconfig
spec:
  selector:
    matchLabels:
      app: isvaconfig
  replicas: 1
  template:
    metadata:
      labels:
        app: isvaconfig
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser:    6000
      volumes:
        - name: isvaconfig
          persistentVolumeClaim:
            claimName: isvaconfig
        - name: isvaconfig-logs
          emptyDir: {}
      containers:
        - name: isvaconfig
          image: ibmcom/verify-access:10.0.2.0
          volumeMounts:
            - mountPath: /var/shared
              name: isvaconfig
            - mountPath: /var/application.logs
              name: isvaconfig-logs
          env:
            - name: SERVICE
              value: config
            - name: CONTAINER_TIMEZONE
              value: Europe/London
            - name: ADMIN_PWD
              valueFrom:
                secretKeyRef:
                  name: isvaadmin
                  key: adminpw
          readinessProbe:
            tcpSocket:
              port:  9443
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 9443
            initialDelaySeconds: 120
            periodSeconds: 20
#          command: [ "/sbin/bootstrap.sh" ]
      imagePullSecrets:
        - name: dockerlogin
---
# for external service access, see https://console.bluemix.net/docs/containers/cs_apps.html#cs_apps_public_nodeport
apiVersion: v1
kind: Service
metadata:
  name: isvaconfig
spec:
# To make the LMI externally visible, make it a nodePort
#  type: NodePort
  ports:
    - port: 9443
      name: isvaconfig
      protocol: TCP
# make this one statically allocated
#      nodePort: 30442
  selector:
    app: isvaconfig
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: isvawrprp1
  labels:
    app: isvawrprp1
spec:
  selector:
    matchLabels:
      app: isvawrprp1
  replicas: 1
  template:
    metadata:
      labels:
        app: isvawrprp1
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser:    6000
      volumes:
        - name: isvaconfig
          emptyDir: {}
        - name: isvawrprp1-logs
          emptyDir: {}
      containers:
        - name: isvawrprp1
          image: ibmcom/verify-access-wrp:10.0.2.0
          ports:
            - containerPort: 443
          volumeMounts:
            - mountPath: /var/shared
              name: isvaconfig
            - mountPath: /var/application.logs
              name: isvawrprp1-logs
          env:
            - name: SERVICE
              value: webseal
            - name: INSTANCE
              value: rp1
            - name: CONTAINER_TIMEZONE
              value: Europe/London
            - name: AUTO_RELOAD_FREQUENCY
              value: "5"
            - name: CONFIG_SERVICE_URL
              value: https://isvaconfig:9443/shared_volume
            - name: CONFIG_SERVICE_USER_NAME
              value: cfgsvc
            - name: CONFIG_SERVICE_USER_PWD
              valueFrom:
                secretKeyRef:
                  name: configreader
                  key: cfgsvcpw
          livenessProbe:
            exec:
              command:
              - /sbin/health_check.sh
              - livenessProbe
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
          readinessProbe:
            exec:
              command:
              - /sbin/health_check.sh
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
      imagePullSecrets:
        - name: dockerlogin
---
# for external service access, see https://console.bluemix.net/docs/containers/cs_apps.html#cs_apps_public_nodeport
apiVersion: v1
kind: Service
metadata:
  name: isvawrprp1
spec:
  type: NodePort
  sessionAffinity: ClientIP
  ports:
    - port: 443
      name: isvawrprp1
      protocol: TCP
      nodePort: 30443
  selector:
    app: isvawrprp1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: isvaruntime
  labels:
    app: isvaruntime
spec:
  selector:
    matchLabels:
      app: isvaruntime
  replicas: 1
  template:
    metadata:
      labels:
        app: isvaruntime
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser:    6000
      volumes:
        - name: isvaconfig
          emptyDir: {}
        - name: isvaruntime-logs
          emptyDir: {}
      containers:
        - name: isvaruntime
          image: ibmcom/verify-access-runtime:10.0.2.0
          ports:
            - containerPort: 443
          volumeMounts:
            - mountPath: /var/shared
              name: isvaconfig
            - mountPath: /var/application.logs
              name: isvaruntime-logs
          env:
            - name: SERVICE
              value: runtime
            - name: CONTAINER_TIMEZONE
              value: Europe/London
            - name: AUTO_RELOAD_FREQUENCY
              value: "5"
            - name: CONFIG_SERVICE_URL
              value: https://isvaconfig:9443/shared_volume
            - name: CONFIG_SERVICE_USER_NAME
              value: cfgsvc
            - name: CONFIG_SERVICE_USER_PWD
              valueFrom:
                secretKeyRef:
                  name: configreader
                  key: cfgsvcpw
          livenessProbe:
            exec:
              command:
              - /sbin/health_check.sh
              - livenessProbe
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
          readinessProbe:
            exec:
              command:
              - /sbin/health_check.sh
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
      imagePullSecrets:
        - name: dockerlogin
---
apiVersion: v1
kind: Service
metadata:
  name: isvaruntime
spec:
  ports:
    - port: 443
      name: isvaruntime
      protocol: TCP
  selector:
    app: isvaruntime
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: isvadsc
  labels:
    app: isvadsc
spec:
  selector:
    matchLabels:
      app: isvadsc
  replicas: 1
  template:
    metadata:
      labels:
        app: isvadsc
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser:    6000
      volumes:
        - name: isvaconfig
          emptyDir: {}
        - name: isvadsc-logs
          emptyDir: {}
      containers:
        - name: isvadsc
          image: ibmcom/verify-access-dsc:10.0.2.0
          ports:
            - containerPort: 443
            - containerPort: 444
          volumeMounts:
            - mountPath: /var/shared
              name: isvaconfig
            - mountPath: /var/application.logs
              name: isvadsc-logs
          env:
            - name: SERVICE
              value: dsc
            - name: INSTANCE
              value: '1'
            - name: CONTAINER_TIMEZONE
              value: Europe/London
            - name: AUTO_RELOAD_FREQUENCY
              value: "5"
            - name: CONFIG_SERVICE_URL
              value: https://isvaconfig:9443/shared_volume
            - name: CONFIG_SERVICE_USER_NAME
              value: cfgsvc
            - name: CONFIG_SERVICE_USER_PWD
              valueFrom:
                secretKeyRef:
                  name: configreader
                  key: cfgsvcpw
          livenessProbe:
            exec:
              command:
              - /sbin/health_check.sh
              - livenessProbe
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
          readinessProbe:
            exec:
              command:
              - /sbin/health_check.sh
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
      imagePullSecrets:
        - name: dockerlogin
---
apiVersion: v1
kind: Service
metadata:
  name: isvadsc
spec:
  ports:
    - port: 443
      name: isvadsc-svc
      protocol: TCP
    - port: 444
      name: isvadsc-rep
      protocol: TCP
  selector:
    app: isvadsc
---
 apiVersion: networking.k8s.io/v1beta1
 kind: Ingress
 metadata:
   name: isvawrprp1
   annotations:
     nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
     nginx.ingress.kubernetes.io/affinity: "cookie"
 spec:
  tls:
  - hosts:
    - www.iamlab.ibm.com
  rules:
  - host: www.iamlab.ibm.com
    http:
      paths:
      - path: /
        backend:
          serviceName: isvawrprp1
          servicePort: 443
