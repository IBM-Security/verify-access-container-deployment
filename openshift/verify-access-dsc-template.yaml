apiVersion: v1
kind: Template
labels:
  template: verify-access-dsc
metadata:
  creationTimestamp: null
  name: verify-access-dsc
  annotations:
    openshift.io/display-name: IBM Security Verify Access DSC
    iconClass: icon-sso
    description: IBM Security Verify Access DSC Services
    openshift.io/long-description: This template deploys the DSC services for an IBM
      Security Verify Access environment.  Initially only the primary DSC starts.
    openshift.io/documentation-url: https://ibm.biz/verifyaccesscontainers
    openshift.io/provider-display-name: IBM Security Verify Access
    openshift.io/support-url: https://ibm.biz/iamcommunity
    tags: ibm, verifyaccess
message: |-

  Application Name: ${APP_NAME}

  The following services have been created in your project:
    - ${DSC_SERVICE}
    - ${DSC_SERVICE}2
    - ${DSC_SERVICE}3
    - ${DSC_SERVICE}4

objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: null
    generation: 1
    labels:
      app: ${APP_NAME}
      name: ${APP_NAME}-dsc1
    name: ${APP_NAME}-dsc1
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        name: ${APP_NAME}-dsc1
    triggers:
      - type: ConfigChange
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APP_NAME}
          name: ${APP_NAME}-dsc1
          isvaaffinity: ${APP_NAME}-dsc
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: isvaaffinity
                    operator: In
                    values:
                    - ${APP_NAME}-dsc
                topologyKey: kubernetes.io/hostname
        serviceAccountName: ${SERVICE_ACCOUNT}
        containers:
        - env:
          - name: INSTANCE
            value: "1"
          - name: CONTAINER_TIMEZONE
            value: ${TIMEZONE}
          - name: CONFIG_SERVICE_URL
            valueFrom:
              secretKeyRef:
                name: ${APP_NAME}-config
                key: config-service-url
          - name: CONFIG_SERVICE_USER_NAME
            valueFrom:
              secretKeyRef:
                name: ${APP_NAME}-config
                key: config-read-username
          - name: CONFIG_SERVICE_USER_PWD
            valueFrom:
              secretKeyRef:
                name: ${APP_NAME}-config
                key: config-read-password
          image: docker.io/ibmcom/verify-access-dsc:${ISVA_VERSION}
          imagePullPolicy: IfNotPresent
          name: ${APP_NAME}-dsc1
          ports:
          - containerPort: 9443
            protocol: TCP
          - containerPort: 9444
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          livenessProbe:
            exec:
              command:
              - /sbin/health_check.sh
              - livenessProbe
            periodSeconds: 10
            timeoutSeconds: 2
          readinessProbe:
            exec:
              command:
              - /sbin/health_check.sh
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
          volumeMounts:
          - mountPath: /var/application.logs
            name: ${APP_NAME}-dsc1-logs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ${PULL_SECRET}
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30
        volumes:
        - name: ${APP_NAME}-dsc1-logs
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: null
    generation: 1
    labels:
      app: ${APP_NAME}
      name: ${APP_NAME}-dsc2
    name: ${APP_NAME}-dsc2
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        name: ${APP_NAME}-dsc2
    triggers:
      - type: ConfigChange
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APP_NAME}
          name: ${APP_NAME}-dsc2
          isvaaffinity: ${APP_NAME}-dsc
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: isvaaffinity
                    operator: In
                    values:
                    - ${APP_NAME}-dsc
                topologyKey: kubernetes.io/hostname
        serviceAccountName: ${SERVICE_ACCOUNT}
        containers:
        - env:
          - name: INSTANCE
            value: "2"
          - name: CONTAINER_TIMEZONE
            value: ${TIMEZONE}
          - name: CONFIG_SERVICE_URL
            valueFrom:
              secretKeyRef:
                name: ${APP_NAME}-config
                key: config-service-url
          - name: CONFIG_SERVICE_USER_NAME
            valueFrom:
              secretKeyRef:
                name: ${APP_NAME}-config
                key: config-read-username
          - name: CONFIG_SERVICE_USER_PWD
            valueFrom:
              secretKeyRef:
                name: ${APP_NAME}-config
                key: config-read-password
          image: docker.io/ibmcom/verify-access-dsc:${ISVA_VERSION}
          imagePullPolicy: IfNotPresent
          name: ${APP_NAME}-dsc2
          ports:
          - containerPort: 9443
            protocol: TCP
          - containerPort: 9444
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          livenessProbe:
            exec:
              command:
              - /sbin/health_check.sh
              - livenessProbe
            periodSeconds: 10
            timeoutSeconds: 2
          readinessProbe:
            exec:
              command:
              - /sbin/health_check.sh
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
          volumeMounts:
          - mountPath: /var/application.logs
            name: ${APP_NAME}-dsc2-logs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ${PULL_SECRET}
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30
        volumes:
        - name: ${APP_NAME}-dsc2-logs
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: null
    generation: 1
    labels:
      app: ${APP_NAME}
      name: ${APP_NAME}-dsc3
    name: ${APP_NAME}-dsc3
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        name: ${APP_NAME}-dsc3
    triggers:
      - type: ConfigChange
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APP_NAME}
          name: ${APP_NAME}-dsc3
          isvaaffinity: ${APP_NAME}-dsc
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: isvaaffinity
                    operator: In
                    values:
                    - ${APP_NAME}-dsc
                topologyKey: kubernetes.io/hostname
        serviceAccountName: ${SERVICE_ACCOUNT}
        containers:
        - env:
          - name: INSTANCE
            value: "3"
          - name: CONTAINER_TIMEZONE
            value: ${TIMEZONE}
          - name: CONFIG_SERVICE_URL
            valueFrom:
              secretKeyRef:
                name: ${APP_NAME}-config
                key: config-service-url
          - name: CONFIG_SERVICE_USER_NAME
            valueFrom:
              secretKeyRef:
                name: ${APP_NAME}-config
                key: config-read-username
          - name: CONFIG_SERVICE_USER_PWD
            valueFrom:
              secretKeyRef:
                name: ${APP_NAME}-config
                key: config-read-password
          image: docker.io/ibmcom/verify-access-dsc:${ISVA_VERSION}
          imagePullPolicy: IfNotPresent
          name: ${APP_NAME}-dsc3
          ports:
          - containerPort: 9443
            protocol: TCP
          - containerPort: 9444
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          livenessProbe:
            exec:
              command:
              - /sbin/health_check.sh
              - livenessProbe
            periodSeconds: 10
            timeoutSeconds: 2
          readinessProbe:
            exec:
              command:
              - /sbin/health_check.sh
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
          volumeMounts:
          - mountPath: /var/application.logs
            name: ${APP_NAME}-dsc3-logs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ${PULL_SECRET}
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30
        volumes:
        - name: ${APP_NAME}-dsc3-logs
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: null
    generation: 1
    labels:
      app: ${APP_NAME}
      name: ${APP_NAME}-dsc4
    name: ${APP_NAME}-dsc4
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        name: ${APP_NAME}-dsc4
    triggers:
      - type: ConfigChange
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APP_NAME}
          name: ${APP_NAME}-dsc4
          isvaaffinity: ${APP_NAME}-dsc
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: isvaaffinity
                    operator: In
                    values:
                    - ${APP_NAME}-dsc
                topologyKey: kubernetes.io/hostname
        serviceAccountName: ${SERVICE_ACCOUNT}
        containers:
        - env:
          - name: INSTANCE
            value: "4"
          - name: CONTAINER_TIMEZONE
            value: ${TIMEZONE}
          - name: CONFIG_SERVICE_URL
            valueFrom:
              secretKeyRef:
                name: ${APP_NAME}-config
                key: config-service-url
          - name: CONFIG_SERVICE_USER_NAME
            valueFrom:
              secretKeyRef:
                name: ${APP_NAME}-config
                key: config-read-username
          - name: CONFIG_SERVICE_USER_PWD
            valueFrom:
              secretKeyRef:
                name: ${APP_NAME}-config
                key: config-read-password
          image: docker.io/ibmcom/verify-access-dsc4:${ISVA_VERSION}
          imagePullPolicy: IfNotPresent
          name: ${APP_NAME}-dsc4
          ports:
          - containerPort: 9443
            protocol: TCP
          - containerPort: 9444
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          livenessProbe:
            exec:
              command:
              - /sbin/health_check.sh
              - livenessProbe
            periodSeconds: 10
            timeoutSeconds: 2
          readinessProbe:
            exec:
              command:
              - /sbin/health_check.sh
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
          volumeMounts:
          - mountPath: /var/application.logs
            name: ${APP_NAME}-dsc4-logs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ${PULL_SECRET}
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30
        volumes:
        - name: ${APP_NAME}-dsc4-logs
          emptyDir: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: ${DSC_SERVICE}
    labels:
      app: ${APP_NAME}
      name: ${APP_NAME}-dsc1
  spec:
    ports:
    - name: service
      port: 9443
      protocol: TCP
      targetPort: 9443
    - name: replication
      port: 9444
      protocol: TCP
      targetPort: 9444
    selector:
      name: ${APP_NAME}-dsc1
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: ${DSC_SERVICE}2
    labels:
      app: ${APP_NAME}
      name: ${APP_NAME}-dsc2
  spec:
    ports:
    - name: service
      port: 9443
      protocol: TCP
      targetPort: 9443
    - name: replication
      port: 9444
      protocol: TCP
      targetPort: 9444
    selector:
      name: ${APP_NAME}-dsc2
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: ${DSC_SERVICE}3
    labels:
      app: ${APP_NAME}
      name: ${APP_NAME}-dsc3
  spec:
    ports:
    - name: service
      port: 9443
      protocol: TCP
      targetPort: 9443
    - name: replication
      port: 9444
      protocol: TCP
      targetPort: 9444
    selector:
      name: ${APP_NAME}-dsc3
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: ${DSC_SERVICE}4
    labels:
      app: ${APP_NAME}
      name: ${APP_NAME}-dsc4
  spec:
    ports:
    - name: service
      port: 9443
      protocol: TCP
      targetPort: 9443
    - name: replication
      port: 9444
      protocol: TCP
      targetPort: 9444
    selector:
      name: ${APP_NAME}-dsc4
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
parameters:
  - displayName: Application Name
    description: This is the name for the application which is used to create unique object names in the cluster.
    name: APP_NAME
    value: verifyaccess
  - displayName: Verify Access Image Version
    description: The tag that will be used to pull the ibmcom/verify-access images.
    name: ISVA_VERSION
    value: 10.0.2.0
  - displayName: Primary DSC Service Name
    description: The name for the Primary DSC service.  Also used as the hostname for connections within the cluster.
      Other DSC service/host names will have 2, 3, and 4 appended.
    name: DSC_SERVICE
    value: isvadsc
  - displayName: Image Pull Secret
    description: This is an (existing) docker login secret for pulling the Access Manager image.
      Only required if hosting images on a private repository
    name: PULL_SECRET
    value: dockerlogin
  - displayName: Timezone
    description: The timezone for message logging (e.g. Europe/London)
    name: TIMEZONE
    value: Etc/UTC
  - displayName: DSC Service Account
    description: This is the (existing) Service Account for running the DSC pods.
    name: SERVICE_ACCOUNT
    value: default
